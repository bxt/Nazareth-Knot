<%

require_relative '../helpers.rb'

FAC_HZ = 0.1
FAC_SP = 0.1
FAC_CN = 0.5

size = 500
thickness = 40
r = 80
N = 3
s = symmetry(N)
ring = s.map { |angle| p(0, -r).rotate2d(angle) }

def spreads(x)
  point, next_point = x
  a1 = -(1 - (N-2)/(2.0*N)) * Math::PI # next -> outer around p
  a2 = (-60/180.0)*Math::PI
  outer = next_point.rotate2d(a1, point)
  mid = avg([point, outer])
  t1 = outer.rotate2d(a2, point)
  t2 = outer.rotate2d(-a2, point)
  hz1 = (1-FAC_HZ)*t1 + FAC_HZ*mid
  hz2 = (1-FAC_HZ)*t2 + FAC_HZ*mid
  o1inner = FAC_SP*outer + (1-FAC_SP)/2*point + (1-FAC_SP)/2*t1
  o2inner = FAC_SP*outer + 0.4*point + (1-FAC_SP)/2*t2
  o1outer = (1-FAC_SP)/2*outer + FAC_SP*point + (1-FAC_SP)/2*t1
  o2outer = (1-FAC_SP)/2*outer + FAC_SP*point + (1-FAC_SP)/2*t2
  counter1 = o2inner.rotate2d(Math::PI, point)*(1-FAC_CN) + point*FAC_CN
  counter2 = o1inner.rotate2d(Math::PI, point)*(1-FAC_CN) + point*FAC_CN
  {
    point: point,
    mid: mid,
    outer: outer,
    hz1: hz1,
    hz2: hz2,
    o1inner: o1inner,
    o2inner: o2inner,
    o1outer: o1outer,
    o2outer: o2outer,
    counter1: counter1,
    counter2: counter2,
  }
end

spreads = (ring + ring.take(1)).each_cons(2).map(&method(:spreads))

triplets = (spreads + spreads.take(2)).each_cons(3).to_a

ordered_triplets = triplets.each_with_index.sort_by do |x, i|
  i.odd? ? 1 : 0
end.map(&:first)

chain = ordered_triplets.map do |triplet|
  s = triplet.map do |spread|
    spread.map do |k, p|
      [k, p.to2d_s]
    end.to_h
  end
  [
    s[0][:outer],
    "C #{s[0][:o1outer]} #{s[0][:o1inner]} #{s[0][:point]}",
    #"L #{s[1][:mid]}",
    "C #{s[0][:counter2]} #{s[1][:hz1]} #{s[1][:mid]}",
    "C #{s[1][:hz2]} #{s[2][:counter1]} #{s[2][:point]}",
    "C #{s[2][:o2inner]} #{s[2][:o2outer]} #{s[2][:outer]}",
  ].join(' ')
end.join(' L ')


stroke_dashes = StrokeDash.new(-30,102,71,98,96,96,98,71,162)

page_intro("Triknot", :white, 'April 2018')

%>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" xml:lang="en" viewBox="<%= -size/2 %> <%= -size/2 %> <%= size %> <%= size %>" id="knot">
  <defs>
    <style>
      /* .bottom { opacity: 0.6; } */
      .top, .bottom { stroke-width: <%= thickness %>px; fill: none; }
      .a { stroke: #8ED8B9; }
      .white { stroke-width: <%= thickness+5 %>px; fill: none; stroke: #fff; }
      .a.top { <%= stroke_dashes.css %> }
      .a.top.white { <%= stroke_dashes.css(2) %> }
    </style>
    <path id="path-a" d="M <%= chain %> Z" />
  </defs>
  <use xlink:href="#path-a" class="a bottom white" />
  <use xlink:href="#path-a" class="a bottom" />
  <use xlink:href="#path-a" class="a top white" />
  <use xlink:href="#path-a" class="a top" />
</svg>
